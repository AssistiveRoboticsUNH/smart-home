<launch>

    <arg name="camera" default="head_camera" />
    <arg name="depth_ns" default="depth_registered" />
    <arg name="image_topic" default="image_raw" />
    <arg name="depth_topic" default="image_raw" />
    <arg name="fixed_frame" default="head_camera_rgb_optical_frame" />
    
    <!--
    DEAPTH ==> /head_camera/depth_registered/points or /head_camera/depth_registered/image_raw
    RGB ==> /head_camera/rgb/image_raw
    rostopic echo /face_detector/people_tracker_measurements_array
    rosnode info /face_detector
    -->
    
    <!--include file="$(find openni_launch)/launch/openni.launch"/-->
    <!--
    <node name="$(anon dynparam)" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters $(arg camera)/driver">
    <param name="depth_registration" type="bool" value="true" />
    </node>
    -->
    
    
    <node pkg="face_detector" type="face_detector" name="face_detector" output="screen">
        <remap from="camera" to="$(arg camera)" />
        <remap from="image_topic" to="$(arg image_topic)" />
        <remap from="depth_topic" to="$(arg depth_topic)" />
        <remap from="depth_ns" to="$(arg depth_ns)" />
        <param name="fixed_frame" type="string" value="$(arg fixed_frame)" />
        
        <param name="classifier_name" type="string" value="frontalface" />
        <rosparam command="load" file="$(find face_detector)/param/classifier.yaml"/>
        <param name="classifier_reliability" type="double" value="0.9"/>
        <param name="do_continuous" type="bool" value="true" />
        <param name="do_publish_faces_of_unknown_size" type="bool" value="false" /> 
        <param name="do_display" type="bool" value="false" />
        <param name="use_rgbd" type="bool" value="true" />
        <param name="approximate_sync" type="bool" value="true" />
    </node>
    
    <!-- The  face_detector needs that someone susbcribes to publish data and detect persons faces -->
    <node pkg="face_detection_tc" type="face_detector_client.py" name="face_detection_client_start_node" output="screen">
    </node>

</launch>